// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: iiynbYDu6GiGaNNDvPQoVR
// Component: FBgIYvMF44
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Select from "../../Select"; // plasmic-import: yonmdAqDUa5/component
import Select__Option from "../../Select__Option"; // plasmic-import: 9nzW04PMBmh/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "../blank_project/plasmic_blank_project.module.css"; // plasmic-import: iiynbYDu6GiGaNNDvPQoVR/projectcss
import * as sty from "./PlasmicSelectInput.module.css"; // plasmic-import: FBgIYvMF44/css

export const PlasmicSelectInput__VariantProps = new Array();

export const PlasmicSelectInput__ArgProps = new Array();

function PlasmicSelectInput__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <Select
        data-plasmic-name={"select"}
        data-plasmic-override={overrides.select}
        className={classNames("__wab_instance", sty.select)}
        defaultValue={""}
      >
        <Select__Option
          className={classNames("__wab_instance", sty.option__dsddX)}
          value={"value1"}
        >
          {"Option 1"}
        </Select__Option>

        <Select__Option
          className={classNames("__wab_instance", sty.option__hT4U)}
          value={"value2"}
        >
          {"Option 2"}
        </Select__Option>

        <Select__Option
          className={classNames("__wab_instance", sty.option__d3RiB)}
          value={"value2 2"}
        >
          {"Option 2"}
        </Select__Option>
      </Select>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "select"],
  select: ["select"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSelectInput__ArgProps,
      internalVariantPropNames: PlasmicSelectInput__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicSelectInput__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSelectInput";
  } else {
    func.displayName = `PlasmicSelectInput.${nodeName}`;
  }
  return func;
}

export const PlasmicSelectInput = Object.assign(
  // Top-level PlasmicSelectInput renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    select: makeNodeComponent("select"),
    // Metadata about props expected for PlasmicSelectInput
    internalVariantProps: PlasmicSelectInput__VariantProps,
    internalArgProps: PlasmicSelectInput__ArgProps
  }
);

export default PlasmicSelectInput;
/* prettier-ignore-end */
